- block: 
  - name: Read license.json from the target machine
    become: true
    ansible.builtin.slurp:
      src: /etc/ravendb/license.json
    register: license_content

  - name: Generate secure-setup.json on the target machine
    become: true
    ansible.builtin.template:
      src: secure-setup.json.j2
      dest: /etc/ravendb/security/secure-setup.json
    vars:
      license: "{{ license_content.content | b64decode | from_json }}"

  - name: Set ownership and permissions for secure-setup.json
    become: true
    ansible.builtin.file:
      path: /etc/ravendb/security/secure-setup.json
      owner: ravendb
      group: ravendb
      mode: '0640'

  - name: Obtain rvn setup package
    become: true
    ansible.builtin.command: >
      ./rvn create-setup-package -m="lets-encrypt" -s="/etc/ravendb/security/secure-setup.json" -o="/etc/ravendb/security/setup_package.zip"
    args:
      chdir: /usr/lib/ravendb/server/
    register: rvn_command_result
    changed_when: "'setup_package.zip' in rvn_command_result.stdout"
    failed_when:
      - rvn_command_result.rc != 0
      - "'setup_package.zip' not in rvn_command_result.stdout"
    retries: 5
    delay: 60
    until: rvn_command_result.rc == 0

  - name: Unzip setup package file
    become: true
    ansible.builtin.unarchive:
      src: /etc/ravendb/security/setup_package.zip
      dest: /etc/ravendb/security/
      remote_src: yes

  - name: Copy generated settings.json
    become: true
    ansible.builtin.copy:
      remote_src: yes
      src: /etc/ravendb/security/{{ node_tag }}/settings.json
      dest: /etc/ravendb/settings.json
      owner: ravendb
      group: ravendb
      mode: '0644'
      force: yes

  - name: Update certificate path in generated settings.json
    become: true
    ansible.builtin.replace:
      path: /etc/ravendb/settings.json
      regexp: '"Security.Certificate.Path":\s*"(.*?)"'
      replace: '"Security.Certificate.Path": "/etc/ravendb/security/{{ node_tag }}/\1"'

  - name: Find all PFX files in /etc/ravendb/security/{{ node_tag }}
    become: true
    ansible.builtin.find:
      paths: /etc/ravendb/security/{{ node_tag }}
      patterns: "*.pfx"
    register: pfx_files

  - name: Set ownership and permissions for each PFX file
    become: true
    ansible.builtin.file:
      path: "{{ item.path }}"
      owner: ravendb
      group: ravendb
      mode: '0640'
    loop: "{{ pfx_files.files }}"

  - name: Add License.Eula.Accepted to settings.json
    become: true
    ansible.builtin.lineinfile:
      path: /etc/ravendb/settings.json
      line: '  "License.Eula.Accepted": true,'
      insertbefore: '"Setup.Mode":.*'

  tags: config,secured