---
- name: Create Multimap Index
  hosts: ravendb_nodes
  gather_facts: no

  roles:
    - ravendb.community.ravendb_python_client_prerequisites

  tasks:
    - name: Ensure RavenDB Index is present (check mode)
      ravendb.community.index:
        url: "http://{{ ansible_host }}:8080"
        database_name: "my_database"
        index_name: "UsersAndOrdersByName"
        index_definition:
          map:
            - "from c in docs.Users select new { Name = c.name, UserCount = 1, OrderCount = 0, TotalCount = 1 }"
            - "from o in docs.Orders select new { Name = o.customer, UserCount = 0, OrderCount = 1, TotalCount = 1 }"
          reduce: >
            from result in results
            group result by result.Name
            into g
            select new 
            { 
              Name = g.Key, 
              UserCount = g.Sum(x => x.UserCount),
              OrderCount = g.Sum(x => x.OrderCount),
              TotalCount = g.Sum(x => x.TotalCount)
            }
        state: present
      check_mode: yes

    - name: Ensure RavenDB Index is present
      ravendb.community.index:
        url: "http://{{ ansible_host }}:8080"
        database_name: "my_database"
        index_name: "UsersAndOrdersByName"
        index_definition:
          map:
            - "from c in docs.Users select new { Name = c.name, UserCount = 1, OrderCount = 0, TotalCount = 1 }"
            - "from o in docs.Orders select new { Name = o.customer, UserCount = 0, OrderCount = 1, TotalCount = 1 }"
          reduce: >
            from result in results
            group result by result.Name
            into g
            select new 
            { 
              Name = g.Key, 
              UserCount = g.Sum(x => x.UserCount),
              OrderCount = g.Sum(x => x.OrderCount),
              TotalCount = g.Sum(x => x.TotalCount)
            }
        state: present

    - name: Ensure RavenDB Index is present (idempotency check)
      ravendb.community.index:
        url: "http://{{ ansible_host }}:8080"
        database_name: "my_database"
        index_name: "UsersAndOrdersByName"
        index_definition:
          map:
            - "from c in docs.Users select new { Name = c.name, UserCount = 1, OrderCount = 0, TotalCount = 1 }"
            - "from o in docs.Orders select new { Name = o.customer, UserCount = 0, OrderCount = 1, TotalCount = 1 }"
          reduce: >
            from result in results
            group result by result.Name
            into g
            select new 
            { 
              Name = g.Key, 
              UserCount = g.Sum(x => x.UserCount),
              OrderCount = g.Sum(x => x.OrderCount),
              TotalCount = g.Sum(x => x.TotalCount)
            }
        state: present
